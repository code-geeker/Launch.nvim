*pg_get_notify*

(PHP 4 >= 4.3.0, PHP 5, PHP 7, PHP 8)

pg_get_notify â€” Gets SQL NOTIFY message

===============================================================================
[ Description ]

  pg_get_notify(PgSql\Connection $connection, int $mode = PGSQL_ASSOC):~
  array|false~

pg_get_notify() gets notifications generated by a NOTIFY SQL command. To
receive notifications, the LISTEN SQL command must be issued.

===============================================================================
[ Parameters ]

{connection}

  An PgSql\Connection instance.

{mode}

  An optional parameter that controls how the returned array is indexed. {mode}
  is a constant and can take the following values: PGSQL_ASSOC, PGSQL_NUM and
  PGSQL_BOTH. Using PGSQL_NUM, the function will return an array with numerical
  indices, using PGSQL_ASSOC it will return only associative indices while
  PGSQL_BOTH will return both numerical and associative indices.

===============================================================================
[ Return Values ]

An array containing the NOTIFY message name and backend PID. If supported by
the server, the array also contains the server version and the payload.
Otherwise if no NOTIFY is waiting, then false is returned.

===============================================================================
[ Changelog ]

Version                               Description
8.1.0   The {connection} parameter expects an PgSql\Connection instance now;
        previously, a resource was expected.

===============================================================================
[ Examples ]

Example #1 PostgreSQL NOTIFY message

<?php >
  $conn = pg_pconnect("dbname=publisher");
  if (!$conn) {
  echo "An error occurred.\n";
  exit;
  }

  // Listen 'author_updated' message from other processes
  pg_query($conn, 'LISTEN author_updated;');
  $notify = pg_get_notify($conn);
  if (!$notify) {
  echo "No messages\n";
  } else {
  print_r($notify);
  }
<?>

===============================================================================
[ See Also ]

 * |pg_get_pid| - Gets the backend's process ID


vim:ft=help: