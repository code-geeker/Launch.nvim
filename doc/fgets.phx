*fgets*

(PHP 4, PHP 5, PHP 7, PHP 8)

fgets â€” Gets line from file pointer

===============================================================================
[ Description ]

  fgets(resource $stream, ?int $length = null): string|false~

Gets a line from file pointer.

===============================================================================
[ Parameters ]

{stream}

  The file pointer must be valid, and must point to a file successfully opened
  by |fopen| or |fsockopen| (and not yet closed by |fclose|).

{length}

  Reading ends when {length} - 1 bytes have been read, or a newline (which is
  included in the return value), or an EOF (whichever comes first). If no
  length is specified, it will keep reading from the stream until it reaches
  the end of the line.

===============================================================================
[ Return Values ]

Returns a string of up to {length} - 1 bytes read from the file pointed to by
{stream}. If there is no more data to read in the file pointer, then false is
returned.

If an error occurs, false is returned.

===============================================================================
[ Examples ]

Example #1 Reading a file line by line

<?php >

  $fp = @fopen("/tmp/inputfile.txt", "r");

  if ($fp) {
  while (($buffer = fgets($fp, 4096)) !== false) {
  echo $buffer, PHP_EOL;
  }

  if (!feof($fp)) {
  echo "Error: unexpected fgets() fail\n";
  }

  fclose($fp);
  }

<?>

===============================================================================
[ Notes ]

  Note: If PHP is not properly recognizing the line endings when reading files
  either on or created by a Macintosh computer, enabling the
  auto_detect_line_endings run-time configuration option may help resolve the
  problem.

  Note:

  People used to the 'C' semantics of fgets() should note the difference in how
  EOF is returned.

===============================================================================
[ See Also ]

 * |fgetss| - Gets line from file pointer and strip HTML tags
 * |fread| - Binary-safe file read
 * |fgetc| - Gets character from file pointer
 * |stream_get_line| - Gets line from stream resource up to a given delimiter
 * |fopen| - Opens file or URL
 * |popen| - Opens process file pointer
 * |fsockopen| - Open Internet or Unix domain socket connection
 * |stream_set_timeout| - Set timeout period on a stream


vim:ft=help: