*pcntl_sigtimedwait*

(PHP 5 >= 5.3.0, PHP 7, PHP 8)

pcntl_sigtimedwait â€” Waits for signals, with a timeout

===============================================================================
[ Description ]

  pcntl_sigtimedwait(    array~
  $signals,    array &$info =~
  [],    int $seconds = 0,    int~
  $nanoseconds = 0): int|false~

The pcntl_sigtimedwait() function operates in exactly the same way as 
|pcntl_sigwaitinfo| except that it takes two additional parameters, {seconds}
and {nanoseconds}, which enable an upper bound to be placed on the time for
which the script is suspended.

===============================================================================
[ Parameters ]

{signals}

  Array of signals to wait for.

{info}

  The {info} is set to an array containing information about the signal. See 
  |pcntl_sigwaitinfo|.

{seconds}

  Timeout in seconds.

{nanoseconds}

  Timeout in nanoseconds.

===============================================================================
[ Return Values ]

pcntl_sigtimedwait() returns a signal number on success, or false on failure.

===============================================================================
[ Changelog ]

Version                               Description
8.4.0   A ValueError is thrown if {signal} is empty.
8.4.0   A TypeError is thrown if {signal} value is not an int.
8.4.0   A ValueError is thrown if {signal} value is invalid.
8.4.0   A ValueError is thrown if {seconds} value is less than 0.
8.4.0   A ValueError is thrown if {nanoseconds} value is less than 0.
8.4.0   A ValueError is thrown if both {seconds} and {nanoseconds} values are
        0.

===============================================================================
[ See Also ]

 * |pcntl_sigprocmask| - Sets and retrieves blocked signals
 * |pcntl_sigwaitinfo| - Waits for signals


vim:ft=help: