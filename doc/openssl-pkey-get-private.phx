*openssl_pkey_get_private*

(PHP 4 >= 4.2.0, PHP 5, PHP 7, PHP 8)

openssl_pkey_get_private â€” Get a private key

===============================================================================
[ Description ]

  openssl_pkey_get_private(#[\SensitiveParameter]~
  OpenSSLAsymmetricKey|OpenSSLCertificate|array|string $private_key,~
  #[\SensitiveParameter] ?string $passphrase = null):~
  OpenSSLAsymmetricKey|false~

openssl_pkey_get_private() parses {private_key} and prepares it for use by
other functions.

===============================================================================
[ Parameters ]

{private_key}

  {private_key} can be one of the following:
  1.a string having the format file://path/to/file.pem. The named file must
    contain a PEM encoded certificate/private key (it may contain both).
  2.A PEM formatted private key.

{passphrase}

  The optional parameter {passphrase} must be used if the specified key is
  encrypted (protected by a passphrase).

===============================================================================
[ Return Values ]

Returns an OpenSSLAsymmetricKey instance on success, or false on error.

===============================================================================
[ Changelog ]

Version                               Description
8.0.0   On success, this function returns an OpenSSLAsymmetricKey instance now;
        previously, a resource of type OpenSSL key was returned.
        {private_key} accepts an OpenSSLAsymmetricKey or OpenSSLCertificate
8.0.0   instance now; previously, a resource of type OpenSSL key or OpenSSL
        X.509 was accepted.
8.0.0   {passphrase} is nullable now.


vim:ft=help: