*simdjson_key_exists*

(PECL simdjson >= 2.0.0)

simdjson_key_exists â€” Check if the JSON contains the value referred to by a
JSON pointer.

===============================================================================
[ Description ]

  simdjson_key_exists(string $json, string $key, int $depth = ?): bool~

Count the number of elements of the object/array found at the requested JSON
pointer.

===============================================================================
[ Parameters ]

{json}

  The {json} string being queried.

{key}

  The JSON pointer string.

{depth}

  Maximum nesting depth of the structure being validated. The value must be
  greater than 0, and less than or equal to 2147483647. Callers should use
  reasonably small values, because larger depths require more buffer space and
  will increase the recursion depth, unlike the current |json_decode|
  implementation.

{throw_if_uncountable}

  When true, a SimdJsonException will be thrown instead of returning 0 when the
  value the JSON pointer points to is neither an object nor an array.

===============================================================================
[ Return Values ]

Returns true if the JSON pointer is valid and refers to a value found within a
valid JSON string. Returns false if the JSON is valid but does not contain the
JSON pointer.


vim:ft=help: