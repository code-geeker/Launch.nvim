*curl_setopt*

(PHP 4 >= 4.0.2, PHP 5, PHP 7, PHP 8)

curl_setopt â€” Set an option for a cURL transfer

===============================================================================
[ Description ]

  curl_setopt(CurlHandle $handle, int $option, mixed $value): bool~

Sets an option on the given cURL session handle.

===============================================================================
[ Parameters ]

{handle}

  A cURL handle returned by |curl_init|.

{option}

  The CURLOPT_* option to set.

{value}

  The value to be set on {option}. See the description of the CURLOPT_*
  constants for details on the type of values each constant expects.

===============================================================================
[ Return Values ]

Returns true on success or false on failure.

===============================================================================
[ Changelog ]

Version                               Description
8.4.0   CURLOPT_DNS_USE_GLOBAL_CACHE no longer has any effect, and enabling it
        on thread-safe PHP builds no longer triggers a warning.
8.0.0   {handle} expects a CurlHandle instance now; previously, a resource was
        expected.
7.3.15, Introduced CURLOPT_HTTP09_ALLOWED.
7.4.3
        Introduced CURLOPT_ABSTRACT_UNIX_SOCKET, CURLOPT_KEEP_SENDING_ON_ERROR,
        CURLOPT_PRE_PROXY, CURLOPT_PROXY_CAINFO, CURLOPT_PROXY_CAPATH,
        CURLOPT_PROXY_CRLFILE, CURLOPT_PROXY_KEYPASSWD,
        CURLOPT_PROXY_PINNEDPUBLICKEY, CURLOPT_PROXY_SSLCERT,
        CURLOPT_PROXY_SSLCERTTYPE, CURLOPT_PROXY_SSL_CIPHER_LIST,
        CURLOPT_PROXY_SSLKEY, CURLOPT_PROXY_SSLKEYTYPE,
        CURLOPT_PROXY_SSL_OPTIONS, CURLOPT_PROXY_SSL_VERIFYHOST,
7.3.0   CURLOPT_PROXY_SSL_VERIFYPEER, CURLOPT_PROXY_SSLVERSION,
        CURLOPT_PROXY_TLSAUTH_PASSWORD, CURLOPT_PROXY_TLSAUTH_TYPE,
        CURLOPT_PROXY_TLSAUTH_USERNAME, CURLOPT_SOCKS5_AUTH,
        CURLOPT_SUPPRESS_CONNECT_HEADERS, CURLOPT_DISALLOW_USERNAME_IN_URL,
        CURLOPT_DNS_SHUFFLE_ADDRESSES, CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS,
        CURLOPT_HAPROXYPROTOCOL, CURLOPT_PROXY_TLS13_CIPHERS,
        CURLOPT_SSH_COMPRESSION, CURLOPT_TIMEVALUE_LARGE and
        CURLOPT_TLS13_CIPHERS.
        Introduced CURL_HTTP_VERSION_2, CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE,
        CURL_HTTP_VERSION_2TLS, CURL_REDIR_POST_301, CURL_REDIR_POST_302,
        CURL_REDIR_POST_303, CURL_REDIR_POST_ALL, CURL_VERSION_KERBEROS5,
        CURL_VERSION_PSL, CURL_VERSION_UNIX_SOCKETS, CURLAUTH_NEGOTIATE,
        CURLAUTH_NTLM_WB, CURLFTP_CREATE_DIR, CURLFTP_CREATE_DIR_NONE,
        CURLFTP_CREATE_DIR_RETRY, CURLHEADER_SEPARATE, CURLHEADER_UNIFIED,
        CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE,
        CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE, CURLMOPT_MAX_HOST_CONNECTIONS,
        CURLMOPT_MAX_PIPELINE_LENGTH, CURLMOPT_MAX_TOTAL_CONNECTIONS,
7.0.7   CURLOPT_CONNECT_TO, CURLOPT_DEFAULT_PROTOCOL, CURLOPT_DNS_INTERFACE,
        CURLOPT_DNS_LOCAL_IP4, CURLOPT_DNS_LOCAL_IP6,
        CURLOPT_EXPECT_100_TIMEOUT_MS, CURLOPT_HEADEROPT, CURLOPT_LOGIN_OPTIONS
        , CURLOPT_PATH_AS_IS, CURLOPT_PINNEDPUBLICKEY, CURLOPT_PIPEWAIT,
        CURLOPT_PROXY_SERVICE_NAME, CURLOPT_PROXYHEADER, CURLOPT_SASL_IR,
        CURLOPT_SERVICE_NAME, CURLOPT_SSL_ENABLE_ALPN, CURLOPT_SSL_ENABLE_NPN,
        CURLOPT_SSL_FALSESTART, CURLOPT_SSL_VERIFYSTATUS, CURLOPT_STREAM_WEIGHT
        , CURLOPT_TCP_FASTOPEN, CURLOPT_TFTP_NO_OPTIONS,
        CURLOPT_UNIX_SOCKET_PATH, CURLOPT_XOAUTH2_BEARER, CURLPROTO_SMB,
        CURLPROTO_SMBS, CURLPROXY_HTTP_1_0, CURLSSH_AUTH_AGENT and
        CURLSSLOPT_NO_REVOKE.

===============================================================================
[ Examples ]

Example #1 Initializing a new cURL session and fetching a web page

<?php >
  // create a new cURL resource
  $ch = curl_init();

  // set URL and other appropriate options
  curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
  curl_setopt($ch, CURLOPT_HEADER, false);

  // grab URL and pass it to the browser
  curl_exec($ch);

  // close cURL resource, and free up system resources
  curl_close($ch);
<?>

===============================================================================
[ Notes ]

  Note:

  Passing an array to CURLOPT_POSTFIELDS will encode the data as multipart/
  form-data, while passing a URL-encoded string will encode the data as
  application/x-www-form-urlencoded.

===============================================================================
[ See Also ]

 * |curl_setopt_array| - Set multiple options for a cURL transfer
 * CURLFile
 * CURLStringFile


vim:ft=help: