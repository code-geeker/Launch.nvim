*array_chunk*

(PHP 4 >= 4.2.0, PHP 5, PHP 7, PHP 8)

array_chunk â€” Split an array into chunks

===============================================================================
[ Description ]

  array_chunk(array $array, int $length, bool $preserve_keys = false): array~

Chunks an array into arrays with {length} elements. The last chunk may contain
less than {length} elements.

===============================================================================
[ Parameters ]

{array}

  The array to work on

{length}

  The size of each chunk

{preserve_keys}

  When set to true keys will be preserved. Default is false which will reindex
  the chunk numerically

===============================================================================
[ Return Values ]

Returns a multidimensional numerically indexed array, starting with zero, with
each dimension containing {length} elements.

===============================================================================
[ Errors/Exceptions ]

If {length} is less than 1, a ValueError will be thrown.

===============================================================================
[ Changelog ]

Version                               Description
        If {length} is less than 1, a ValueError will be thrown now;
8.0.0   previously, an error of level E_WARNING has been raised instead, and
        the function returned null.

===============================================================================
[ Examples ]

Example #1 array_chunk() example

<?php >
  $input_array = array('a', 'b', 'c', 'd', 'e');
  print_r(array_chunk($input_array, 2));
  print_r(array_chunk($input_array, 2, true));
<?>

The above example will output:

Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [0] => c
            [1] => d
        )

    [2] => Array
        (
            [0] => e
        )

)
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [2] => c
            [3] => d
        )

    [2] => Array
        (
            [4] => e
        )

)

===============================================================================
[ See Also ]

 * |array_slice| - Extract a slice of the array


vim:ft=help: