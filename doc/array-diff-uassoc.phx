*array_diff_uassoc*

(PHP 5, PHP 7, PHP 8)

array_diff_uassoc â€” Computes the difference of arrays with additional index
check which is performed by a user supplied callback function

===============================================================================
[ Description ]

  array_diff_uassoc(array $array, array ...$arrays, callable~
  $key_compare_func): array~

Compares {array} against {arrays} and returns the difference. Unlike 
|array_diff| the array keys are used in the comparison.

Unlike |array_diff_assoc| a user supplied callback function is used for the
indices comparison, not internal function.

===============================================================================
[ Parameters ]

{array}

  The array to compare from

{arrays}

  Arrays to compare against

{key_compare_func}

  The comparison function must return an integer less than, equal to, or
  greater than zero if the first argument is considered to be respectively less
  than, equal to, or greater than the second.


  callback(mixed $a, mixed $b): int~
  Caution

  Returning non-integer values from the comparison function, such as float,
  will result in an internal cast to int of the callback's return value. So
  values such as 0.99 and 0.1 will both be cast to an integer value of 0, which
  will compare such values as equal.

===============================================================================
[ Return Values ]

Returns an array containing all the entries from {array} that are not present
in any of the other arrays.

===============================================================================
[ Examples ]

Example #1 array_diff_uassoc() example

In this example the "a" => "green" pair is present in both arrays and thus it
is not in the output from the function. Unlike this, the pair 0 => "red" is in
the output because the key of "red" is automatically assigned to 0 in the first
array, whereas it is assigned to 1 in the second array as the key 0 is already
taken by yellow.

<?php >
  function key_compare_func($a, $b)
  {
  return $a <=> $b;
  }

  $array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
  $array2 = array("a" => "green", "yellow", "red");
  $result = array_diff_uassoc($array1, $array2, "key_compare_func");
  print_r($result);
<?>

The above example will output:

Array
(
    [b] => brown
    [c] => blue
    [0] => red
)

The equality of 2 indices is checked by the user supplied callback function.

===============================================================================
[ Notes ]

  Note:

  This function only checks one dimension of an n-dimensional array. It is
  possible to check deeper dimensions by using, for example, array_diff_uassoc
  ($array1[0], $array2[0], "key_compare_func");.

===============================================================================
[ See Also ]

 * |array_diff| - Computes the difference of arrays
 * |array_diff_assoc| - Computes the difference of arrays with additional index
  check
 * |array_udiff| - Computes the difference of arrays by using a callback
  function for data comparison
 * |array_udiff_assoc| - Computes the difference of arrays with additional
  index check, compares data by a callback function
 * |array_udiff_uassoc| - Computes the difference of arrays with additional
  index check, compares data and indexes by a callback function
 * |array_intersect| - Computes the intersection of arrays
 * |array_intersect_assoc| - Computes the intersection of arrays with
  additional index check
 * |array_uintersect| - Computes the intersection of arrays, compares data by a
  callback function
 * |array_uintersect_assoc| - Computes the intersection of arrays with
  additional index check, compares data by a callback function
 * |array_uintersect_uassoc| - Computes the intersection of arrays with
  additional index check, compares data and indexes by separate callback
  functions


vim:ft=help: